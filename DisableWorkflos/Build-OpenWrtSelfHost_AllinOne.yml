#
# Copyright (c) 2022-2023 SMALLPROGRAM <https://github.com/smallprogram/OpenWrtAction>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/smallprogram/OpenWrtAction
# Description: Build OpenWrt using GitHub Actions
#

name: Build-OpenWrtSelfHost_AllinOne

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
  # schedule:
  #   - cron: 0 */8 * * *

env:
  TZ: Asia/Shanghai



jobs:
  build:
    runs-on: self-hosted
    timeout-minutes: 1440
    steps:
    - name: Checkout
      uses: actions/checkout@main
  
    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
    
    - name: Update Action Source
      id: UpdateSource
      run: |
        cd /home/$USER/actions-runner/_work/OpenWrtAction/OpenWrtAction
        bash SelfHostCheck.sh
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Compile the firmware X86
      id: compile_X86
      if: steps.UpdateSource.outputs.status == 'success' && !cancelled()
      run: |
        
        cd /home/$USER/OpenWrtAction
        echo githubaction | sudo -S bash Freemem.sh
        bash wsl2op_one.sh X86.config
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Clean Compile the firmware X86
      id: clean_compile_X86
      if: steps.compile_X86.outputs.status != 'success' && !cancelled()
      run: |
        cd /home/$USER/OpenWrtAction
        echo githubaction | sudo -S bash Freemem.sh
        rm -rf /home/$USER/lean_openwrt/
        bash wsl2op_one.sh X86.config 1
        echo "status=success" >> $GITHUB_OUTPUT
    
    - name: Compile the firmware R5S
      id: compile_R5S
      if: steps.UpdateSource.outputs.status == 'success' && !cancelled()
      run: |
        cd /home/$USER/OpenWrtAction
        echo githubaction | sudo -S bash Freemem.sh
        bash wsl2op_one.sh R5S.config
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Clean Compile the firmware R5S
      id: clean_compile_R5S
      if: steps.compile_R5S.outputs.status != 'success' && !cancelled()
      run: |
        cd /home/$USER/OpenWrtAction
        echo githubaction | sudo -S bash Freemem.sh
        rm -rf /home/$USER/lean_openwrt/
        bash wsl2op_one.sh R5S.config 1
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Compile the firmware R4S
      id: compile_R4S
      if: steps.UpdateSource.outputs.status == 'success' && !cancelled()
      run: |
        cd /home/$USER/OpenWrtAction
        echo githubaction | sudo -S bash Freemem.sh
        bash wsl2op_one.sh R4S.config
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Clean Compile the firmware R4S
      id: clean_compile_R4S
      if: steps.compile_R4S.outputs.status != 'success' && !cancelled()
      run: |
        cd /home/$USER/OpenWrtAction
        echo githubaction | sudo -S bash Freemem.sh
        rm -rf /home/$USER/lean_openwrt/
        bash wsl2op_one.sh R4S.config 1
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Compile the firmware R2S
      id: compile_R2S
      if: steps.UpdateSource.outputs.status == 'success' && !cancelled()
      run: |
        cd /home/$USER/OpenWrtAction
        echo githubaction | sudo -S bash Freemem.sh
        bash wsl2op_one.sh R2S.config
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Clean Compile the firmware R2S
      id: clean_compile_R2S
      if: steps.compile_R2S.outputs.status != 'success' && !cancelled()
      run: |
        cd /home/$USER/OpenWrtAction
        echo githubaction | sudo -S bash Freemem.sh
        rm -rf /home/$USER/lean_openwrt/
        bash wsl2op_one.sh R2S.config 1
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Compile the firmware R2C
      id: compile_R2C
      if: steps.UpdateSource.outputs.status == 'success' && !cancelled()
      run: |
        cd /home/$USER/OpenWrtAction
        echo githubaction | sudo -S bash Freemem.sh
        bash wsl2op_one.sh R2C.config
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Clean Compile the firmware R2C
      id: clean_compile_R2C
      if: steps.compile_R2C.outputs.status != 'success' && !cancelled()
      run: |
        cd /home/$USER/OpenWrtAction
        echo githubaction | sudo -S bash Freemem.sh
        rm -rf /home/$USER/lean_openwrt/
        bash wsl2op_one.sh R2C.config 1
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Compile the firmware Pi4_Model_B
      id: compile_Pi4_Model_B
      if: steps.UpdateSource.outputs.status == 'success' && !cancelled()
      run: |
        cd /home/$USER/OpenWrtAction
        echo githubaction | sudo -S bash Freemem.sh
        bash wsl2op_one.sh Pi4_Model_B.config
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Clean Compile the firmware Pi4_Model_B
      id: clean_compile_Pi4_Model_B
      if: steps.compile_Pi4_Model_B.outputs.status != 'success' && !cancelled()
      run: |
        cd /home/$USER/OpenWrtAction
        echo githubaction | sudo -S bash Freemem.sh
        rm -rf /home/$USER/lean_openwrt/
        bash wsl2op_one.sh Pi4_Model_B.config 1
        echo "status=success" >> $GITHUB_OUTPUT
        

#
# Copyright (c) 2022-2023 SMALLPROGRAM <https://github.com/smallprogram/OpenWrtAction>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/smallprogram/OpenWrtAction
# Description: Build OpenWrt using GitHub Actions
#

name: testsss

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
  # schedule:
  #   - cron: 0 */8 * * *

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds_config/custom.feeds.conf.default
  CONFIG_FILE: config/X86.config
  DIY_P1_SH: diy_script/diy-part1.sh
  DIY_P2_SH: diy_script/diy-part2.sh
  COMMIT_LOG_NUM: 1
  RELEASE_TAG: X86
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: true
  SERVERCHAN_SCKEY: true 
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        df -hT $PWD

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && cp -r $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    # - name: Update feeds
    #   run: cd openwrt && ./scripts/feeds update -a

    # - name: Install feeds
    #   run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && cp -r files openwrt/files
        [ -e $CONFIG_FILE ] && cp -r $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: Debugging with tmate
      uses: mxschmitt/action-tmate@v3.16
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')

    - name: Generate release tag
      id: tag
      run: |
        echo "release_tag=$(date +"%Y.%m.%d_%H%M")_$RELEASE_TAG" >> $GITHUB_OUTPUT
        
        echo "## :mega:Update content" >> release.txt

        echo "**:loudspeaker:Cancel the ext4 format and only keep the squashfs format.**" >> release.txt
        echo "**:computer:Including traditional IMG format firmware and UEFI boot firmware.**" >> release.txt
        echo "**:cd:Including qcow2 format firmware and UEFI boot firmware supporting pve virtual machine.**" >> release.txt
        echo "**:cd:Including vdi format firmware and UEFI boot firmware supporting Visual Box virtual machine.**" >> release.txt
        echo "**:cd:Including vhdx format firmware and UEFI boot firmware supporting Hyper-v virtual machines.**" >> release.txt
        echo "**:dvd:Including vmdk format firmware and UEFI boot firmware that support ESXi virtual machines (8.0 requires tool conversion).**" >> release.txt

        touch release.txt
        echo "status=success" >> $GITHUB_OUTPUT

    # - name: Upload firmware to release
    #   uses: softprops/action-gh-release@v0.1.15
    #   if: steps.tag.outputs.status == 'success' && !cancelled()
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     tag_name: ${{ steps.tag.outputs.release_tag }}
    #     body_path: release.txt
    #     files: release.txt

    - name: Checkout
      uses: actions/checkout@main
      
    - name: Generate commit
      id: Gen_commit
      run: |
        sed -i 's/\(${{ env.RELEASE_TAG }}:\).*\(|\)/\${{ env.RELEASE_TAG }}: [![](https:\/\/img.shields.io\/badge\/LatestRelease-${{ steps.tag.outputs.release_tag }}-green?style=flat-square)](https:\/\/github.com\/smallprogram\/OpenWrtAction\/releases\/tag\/${{ steps.tag.outputs.release_tag }})\2/' docs/README.md
        rm -rf release.txt
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Git Auto Commit
      uses: stefanzweifel/git-auto-commit-action@v4.16.0
      id: commit
      if: steps.Gen_commit.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        commit_message: New Release Automated Change ${{ steps.tag.outputs.release_tag }}
        branch: main
